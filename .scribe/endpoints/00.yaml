name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/healthcheck
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"up","services":{"database":"up","redis":"up"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"users":[{"id":1,"name":"Ms. Ardith Reichel I","email":"waufderhar@example.org","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":2,"name":"Luisa Simonis","email":"scorkery@example.net","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":3,"name":"Alva Hessel","email":"dayna23@example.net","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":4,"name":"Prof. Alessandro Kuhn","email":"lisandro.hickle@example.com","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":5,"name":"Horace Rodriguez","email":"vesta.crona@example.com","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":6,"name":"Dolores Kiehn","email":"lyda.mann@example.com","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":7,"name":"Lois Kutch","email":"xzavier.howe@example.com","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":8,"name":"Prof. Katrine Bradtke IV","email":"blanda.cyril@example.org","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":9,"name":"Jovanny Connelly III","email":"kokuneva@example.net","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":10,"name":"Kenyon Bauch","email":"vonrueden.dominique@example.org","email_verified_at":"2023-03-13T13:21:53.000000Z","created_at":"2023-03-13T13:21:53.000000Z","updated_at":"2023-03-13T13:21:53.000000Z"},{"id":11,"name":"Rp5QH","email":"elouise01@example.com","email_verified_at":null,"created_at":"2023-03-13T14:18:56.000000Z","updated_at":"2023-03-13T14:18:56.000000Z"},{"id":12,"name":"Rp5QH","email":"elouise012@example.com","email_verified_at":null,"created_at":"2023-03-13T14:20:08.000000Z","updated_at":"2023-03-13T14:20:08.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must match the regex /^[a-zA-Z0-9''\s]+$/.'
        required: true
        example: oGAqJ
        type: string
        custom: []
      email:
        name: email
        description: 'This field must be a valid email address.'
        required: true
        example: makenna.mante@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'This field must be at least 6 characters.'
        required: true
        example: ';VfCuAE?u|4:N7'
        type: string
        custom: []
    cleanBodyParameters:
      name: oGAqJ
      email: makenna.mante@example.net
      password: ';VfCuAE?u|4:N7'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pay
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      payment_type:
        name: payment_type
        description: 'The payment_type.'
        required: true
        example: Paypal
        type: string
        custom: []
    cleanBodyParameters:
      payment_type: Paypal
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
